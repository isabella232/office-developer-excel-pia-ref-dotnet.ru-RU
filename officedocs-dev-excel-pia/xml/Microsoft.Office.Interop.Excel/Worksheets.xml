<Type Name="Worksheets" FullName="Microsoft.Office.Interop.Excel.Worksheets">
  <Metadata><Meta Name="ms.openlocfilehash" Value="568a7170d5682c9a3e761b870e9ced7af6fba23888301567a84f883402cb0c5a" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54518456" /></Metadata><TypeSignature Language="C#" Value="public interface Worksheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Worksheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Worksheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Worksheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Worksheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B1-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Коллекция всех объектов <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> в указанной или активной книге. Каждый <b>объект таблицы</b> представляет таблицу.</summary>
    <remarks><para>Используйте <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> свойство, чтобы вернуть коллекцию <b>"Таблицы".</b></para>
      <para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> для создания нового таблицы и добавления его в коллекцию.</para>
      <para>Используйте <b>таблицы</b>(), где находится номер или имя индекса таблицы, чтобы вернуть один объект <paramref name="index" /> <paramref name="index" /> <b>таблицы.</b></para>
      <para>Объект <b>Worksheet</b> также является членом <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> коллекции. Коллекция <b>Листов</b> содержит все листы в книге (как таблицы, так и листы).</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><b>Необязательный объект</b>. Объект, указывающий лист, перед которым добавляется новый лист.</param>
        <param name="After"><b>Необязательный объект</b>. Объект, указывающий лист, после которого добавляется новый лист.</param>
        <param name="Count"><b>Необязательный объект</b>. Количество добавляемых листов. Значение по умолчанию — один.</param>
        <param name="Type"><b>Необязательный объект</b>. Определяет тип листа. Может быть одной из следующих констант: <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>или <b>xlExcel4IntlMacroSheet</b>. Если вставляется лист на основе существующего шаблона, укажите путь к шаблону. Значение по умолчанию — <b>xlWorksheet</b>.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если оба листа пропущены, новый лист вставляется <paramref name="Before" /> <paramref name="After" /> перед активным листом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><b>Необязательный объект</b>. Объект, указывающий лист, перед которым добавляется новый лист.</param>
        <param name="After"><b>Необязательный объект</b>. Объект, указывающий лист, после которого добавляется новый лист.</param>
        <param name="Count"><b>Необязательный объект</b>. Количество добавляемых листов. Значение по умолчанию одно</param>
        <param name="NewLayout"><b>Необязательный объект</b>. Объект, который указывает макет, который будет использоваться для нового таблицы.</param>
        <summary>Этот метод реализуется только для объекта коллекции <b>Диаграммы</b> и создает ошибку времени выполнения, если используется на объектах <b>Листы</b> и <b>Листы.</b></summary>
        <returns>To be added.</returns>
        <remarks><para>Если оба листа пропущены, новый лист вставляется <paramref name="Before" /> <paramref name="After" /> перед активным листом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет Microsoft Excel приложение. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><b>Необязательный объект</b>. Лист, перед которым будет размещен скопирован лист. Вы не можете <paramref name="Before" /> указать, указываете <paramref name="After" /> ли вы.</param>
        <param name="After"><b>Необязательный объект</b>. Лист, после которого будет размещен скопирован лист. Вы не можете <paramref name="After" /> указать, указываете <paramref name="Before" /> ли вы.</param>
        <summary>Копирует лист в другое расположение в книге.</summary>
        <remarks><para>Если вы не указываете ни то, ни Microsoft Excel создает новую книгу, которая <paramref name="Before" /> <paramref name="After" /> содержит скопированную простыню.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество объектов в коллекции. Только для чтения, <b>Integer</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан. Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную hexadecimal number 5843454C. Только для чтения <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> .</summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>Creator</b> предназначено для использования в Microsoft Excel Macintosh, где каждое приложение имеет код создателя из четырех символов. Например, Microsoft Excel имеет код создателя XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет объект.</summary>
        <remarks><para>При удалении или удалении этот метод отображает диалоговое окно, которое подсказает пользователю подтверждение <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> удаления. Этот диалоговое окно отображается по умолчанию. Метод <b>Delete</b> возвращает значение <b>Boolean</b> <b></b> false, если пользователь щелкнул Отмена в диалоговом окне или <b>True,</b> если пользователь нажал кнопку Удалить.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range">Необходимый <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект. Диапазон для заполнения всех таблиц в коллекции. Диапазон должен быть из таблицы в коллекции.</param>
        <param name="Type"><see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />Необязательный . Указывает, как скопировать диапазон.</param>
        <summary>Копирует диапазон в ту же область на всех остальных таблицах в коллекции.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> коллекцию, представляюную горизонтальные разрывы страницы на листе. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Существует ограничение в 1026 горизонтальных разрывов страниц на лист.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Необходимый <b>объект</b>. Имя или номер индекса объекта.</param>
        <summary>Возвращает один объект из коллекции.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><b>Необязательный объект</b>. Лист, перед которым будет размещен перемещен лист. Вы не можете <paramref name="Before" /> указать, указываете <paramref name="After" /> ли вы.</param>
        <param name="After"><b>Необязательный объект</b>. Лист, после которого перемещается лист. Вы не можете <paramref name="After" /> указать, указываете ли вы <b>Ранее</b>.</param>
        <summary>Перемещает лист в другое расположение в книге.</summary>
        <remarks><para>Если вы не указываете ни то, ни Microsoft Excel создает новую <paramref name="Before" /> <paramref name="After" /> книгу, которая содержит перенесенный лист.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><b>Необязательный объект</b>. Число страницы, на которой необходимо начать печать. Если этот аргумент опущен, печать начинается в начале.</param>
        <param name="To"><b>Необязательный объект</b>. Номер последней страницы для печати. Если этот аргумент опущен, печать заканчивается последней страницей.</param>
        <param name="Copies"><b>Необязательный объект</b>. Количество копий для печати. Если этот аргумент опущен, печатается одна копия.</param>
        <param name="Preview"><b>Необязательный объект</b>. <b>True,</b> чтобы Microsoft Excel вызвать предварительный просмотр печати перед печатью объекта. <b>False</b> (или опущенный) для немедленной печати объекта.</param>
        <param name="ActivePrinter"><b>Необязательный объект</b>. Задает имя активного принтера.</param>
        <param name="PrintToFile"><b>Необязательный объект</b>. <b>True</b> для печати в файл. Если не указано, Microsoft Excel пользователю ввести имя <paramref name="PrToFileName" /> выходного файла.</param>
        <param name="Collate"><b>Необязательный объект</b>. <b>True</b> для скопить несколько копий.</param>
        <param name="PrToFileName"><b>Необязательный объект</b>. Если <paramref name="PrintToFile" /> <b>задана версия True,</b>в этом аргументе указывается имя файла, который необходимо распечатать.</param>
        <summary>Принты объекта.</summary>
        <remarks><para>"Страницы" в описаниях печатных страниц и ссылаются на них, а не общие страницы в <paramref name="From" /> <paramref name="To" /> листе или книге.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">Включает изменения объекта.</param>
        <summary>Показывает предварительный просмотр объекта, как он будет выглядеть при печати.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><b>Необязательный</b> объект (используется только с листами). <b>True</b> для замены текущего выбора указанным объектом. <b>False,</b> чтобы расширить текущий выбор, чтобы включить все ранее выбранные объекты и указанный объект.</param>
        <summary>Выбирает объект.</summary>
        <remarks><para>Чтобы выбрать ячейку или диапазон ячеек, используйте <b>метод Select.</b> Чтобы сделать одну ячейку активной ячейкой, используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, виден ли объект. Объект <b>Read/write</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> коллекцию, представляюную разрывы вертикальной страницы на листе. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>