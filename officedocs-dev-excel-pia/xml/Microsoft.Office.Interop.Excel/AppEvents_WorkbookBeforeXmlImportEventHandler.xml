<Type Name="AppEvents_WorkbookBeforeXmlImportEventHandler" FullName="Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d39346b5b3f85253e1e823e924f059fef1d15d56c79af7cf49c8b953cfaf4b7c" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54505072" /></Metadata><TypeSignature Language="C#" Value="public delegate void AppEvents_WorkbookBeforeXmlImportEventHandler(Workbook Wb, XmlMap Map, string Url, bool IsRefresh, out bool Cancel);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AppEvents_WorkbookBeforeXmlImportEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AppEvents_WorkbookBeforeXmlImportEventHandler(Wb As Workbook, Map As XmlMap, Url As String, IsRefresh As Boolean, ByRef Cancel As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AppEvents_WorkbookBeforeXmlImportEventHandler(Workbook ^ Wb, XmlMap ^ Map, System::String ^ Url, bool IsRefresh, [Runtime::InteropServices::Out] bool % Cancel);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="Wb" Type="Microsoft.Office.Interop.Excel.Workbook" />
    <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
    <Parameter Name="Url" Type="System.String" />
    <Parameter Name="IsRefresh" Type="System.Boolean" />
    <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="Wb">Обязательно <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> . Целевая книга.</param>
    <param name="Map">Обязательно <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> . XML-карта, которая будет использоваться для импорта данных.</param>
    <param name="Url">Обязательный атрибут типа <b>String</b>. Расположение импортируемого XML-файла.</param>
    <param name="IsRefresh">Обязательный атрибут типа <b>Boolean</b>. <b>True,</b> если событие было вызвано обновлением существующего подключения к данным XML; <b>False,</b> если будет создано новое сопоставление.</param>
    <param name="Cancel">Обязательный атрибут типа <b>Boolean</b>. Установите для <b>True</b> отмену операции импорта или обновления.</param>
    <summary>Тип <b>Delegate,</b> используемый для добавления обработка событий для <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport" /> события. Событие <b>WorkbookBeforeXmlImport</b> происходит до обновления существующего XML-подключения к данным или импорта новых XML-данных в любую открытую книгу Microsoft Excel.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>