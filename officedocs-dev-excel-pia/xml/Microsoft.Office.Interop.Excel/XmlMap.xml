<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58611d8fcb25a1ddb69be84f80fc57499b32c31956a1e5f767f810ae2adea247" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54519562" /></Metadata><TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет XML-карту, добавленную в книгу.</summary>
    <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
      <para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> коллекции, чтобы добавить XML-карту в книгу.</para>
      <para>Импорт и экспорт XML-данных</para>
      <para>Используйте метод для импорта XML-данных из XML-файла данных в ячейки, относясь к <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> указанному <b>XmlMap.</b> Метод <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> импортирует XML-данные для <b>переменной String.</b></para>
      <para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> для экспорта данных из ячеек, относясь к указанному <b>XmlMap.</b> Метод <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> экспортирует XML-данные в <b>переменную String.</b></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Верно,</b> если ширина столбца автоматически корректируется в лучшую форму при каждом обновлении указанной таблицы запросов или XML-карты. <b>False,</b> если ширина столбца не настраивается автоматически с каждым обновлением. Значение по умолчанию — <b>True</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Максимальная ширина столбца составляет две трети ширины экрана.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если вы хотите приобщить новые строки к спискам XML, которые привязаны к указанной схеме при импорте новых данных или обновления существующего подключения. <b>False,</b> если вы хотите переписать содержимое ячеек. Значение по умолчанию — <b>False</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет Microsoft Excel приложение. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан. Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную hexadecimal number 5843454C. Только для чтения <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> .</summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>Creator</b> предназначено для использования в Microsoft Excel Macintosh, где каждое приложение имеет код создателя из четырех символов. Например, Microsoft Excel имеет код создателя XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> объект, представляюющий привязку, связанную с указанной схемой. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет указанную XML-карту из книги.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">Обязательный атрибут типа <b>String</b>. Путь и имя файла XML-файла данных для экспорта.</param>
        <param name="Overwrite">Обязательный атрибут типа <b>Boolean</b>. Установите для <b>True</b> переописывание файла, указанного в <paramref name="URL" /> параметре, если файл существует. Значение по умолчанию, если <b>false</b>.</param>
        <summary>Экспортирует содержимое ячеек, относясь к указанному <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объекту, в XML-файл данных. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> .</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте метод для экспорта содержимого на карте ячеек в <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> переменную <b>String.</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data">Обязательный атрибут типа <b>String</b>. Переменная для экспорта данных.</param>
        <summary>Экспортирует содержимое ячеек, относясь к указанному <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объекту, в <b>переменную String.</b> Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> .</summary>
        <returns>To be added.</returns>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Чтобы экспортировать содержимое картографных ячеек в XML-файл данных, используйте <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">Обязательный атрибут типа <b>String</b>. Путь к импорту XML-данных. Путь можно укаменовать в формате универсальной конвенции именования (UNC) или единообразного локатора ресурсов (URL-адрес). Файл может быть XML-файлом данных или действительным Office XML-файлом источника данных (.uxdc).</param>
        <param name="Overwrite"><b>Необязательный объект</b>. Установите для <b>True</b> переописывание существующих данных. Установите для <b>false</b> приложение к существующим данным. Значение по умолчанию — <b>False</b>.</param>
        <summary>Импортирует данные из указанного XML-файла данных в ячейки, которые были соеданы к указанному <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объекту. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData">Обязательный атрибут типа <b>String</b>. Строка, которая содержит импорт XML-данных.</param>
        <param name="Overwrite">Необязательное <b>значение Boolean.</b> Указывает, следует ли переописывать содержимое ячеек, которые в настоящее время соописуются на указанную XML-карту. Настройка <b>True</b> для переописывание ячеек; <b>установлено, что False</b> привяжет данные к существующему диапазону. Если этот параметр не указан, текущее значение свойства XML-карты определяет, перезаписано ли содержимое <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> ячеек.</param>
        <summary>Импорт XML-данных из переменной <b>String</b> в ячейки, которые были соеданы к указанному <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объекту. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> констант.</summary>
        <returns>To be added.</returns>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Чтобы импортировать содержимое XML-файла данных в ячейки, относясь к определенной схеме, используйте <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> метод <b>объекта XmlMap.</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>True,</b> Microsoft Excel можно использовать объекты на указанной схеме для экспорта XML-данных и если все XML-списки, относясь к указанной схеме, можно <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> экспортировать. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает удобное имя, используемое для уникального определения сопоставления в книге. Для чтения и записи, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает, сохраняется ли фильтрация при обновлении указанной XML-карты. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если форматирование номеров на ячейках, относявшихся к указанной схеме XML, будет сохранено при обновлении схемы. Значение по умолчанию — <b>False</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку,</b> представляюную имя корневого элемента для указанной схемы XML. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет корневой элемент для указанной <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> схемы XML. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если определение источника данных указанной схемы XML сохранено в книге. Значение по умолчанию — <b>True</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> коллекцию, представляюную схемы, которые содержат указанный <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объект. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Первым элементом в возвращенной коллекции <b>XmlSchemas</b> является схема, используемая в качестве корневого элемента указанной схемы XML.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает, следует ли отображать диалоговое окно, в которое отображаются ошибки проверки схемы при импорте или экспорте данных по указанной схеме XML. Значение по умолчанию — <b>False</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Повторное подключение для указанного <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объекта. Только для чтения.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>